name: CI

on:
  push:
    branches:
      - main
      - "feat/*"
  pull_request:
    branches:
      - main

jobs:
  # ---------- BUILD ----------
  build:
    name: Build (Maven package)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 24 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'
          cache: maven   # built-in cache for ~/.m2

      - name: Make mvnw executable
        run: chmod +x mvnw

      # If you want to keep your custom flags, keep them below
      - name: Maven package (skip tests)
        run: |
          ./mvnw package -DskipTests=true -e \
            -Dhttps.protocols=TLSv1.2 \
            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN \
            -Dorg.slf4j.simpleLogger.showDateTime=true \
            -Djava.awt.headless=true \
            --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar
          if-no-files-found: error
          retention-days: 30

  # ---------- QUALITY ----------
  quality:
    name: Code Quality (Code Climate JSON)
    runs-on: ubuntu-latest
    needs: [build]
    continue-on-error: true  # like allow_failure: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Docker is available on ubuntu-latest; no DinD needed
      - name: Create folder
        run: mkdir -p codequality-results

      - name: Run Code Climate analyze (JSON)
        run: |
          docker run --rm \
            -e CODECLIMATE_CODE="$GITHUB_WORKSPACE" \
            -v "$GITHUB_WORKSPACE":/code \
            -v /tmp/cc:/tmp/cc \
            -v /var/run/docker.sock:/var/run/docker.sock \
            codeclimate/codeclimate analyze -f json > codequality-results/gl-code-quality-report.json

      - name: Upload Code Quality report
        uses: actions/upload-artifact@v4
        with:
          name: codequality-report
          path: codequality-results/

  # ---------- PACKAGE ----------
  package:
    name: Package (Docker build & push)
    runs-on: ubuntu-latest
    needs: [build]

    env:
      IMAGE_TAG: ${{ github.sha }}
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}  # owner/repo

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download JAR from build
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target

      - name: Log in to GHCR
        if: env.REGISTRY == 'ghcr.io'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: |
          docker build -t $REGISTRY/${IMAGE_NAME}:${IMAGE_TAG} .

      - name: Push image
        run: |
          docker push $REGISTRY/${IMAGE_NAME}:${IMAGE_TAG}